---
title: "Text Analysis Work"
author: "Noelle & Gael"
date: '2024-04-15'
output: html_document
---
```{r}
install.packages(c("tidyverse", 
                   "tidytext",
                   "stopwords",
                   "widyr",
                   "tidygraph",
                   "tidylo",
                   "ggraph",
                   "wordcloud",
                   "dplyr"))
```


```{r}
library(dplyr)
library(tidyverse)
library("magrittr") 
library(tidyverse)
library(tidytext)
```


```{r}
library(readr)
journal_71_72 <- read_csv("Data Sets/journal_1871_1872 - Sheet1 (1).csv")
journal_73 <- read_csv("Data Sets/journal_1873 - Sheet1.csv")
journal_74 <- read_csv("Data Sets/journal_1874 - Sheet1.csv")
journal_75 <- read_csv("Data Sets/journal_1875 - Sheet1.csv")
journal_76 <- read_csv("Data Sets/journal_1876 - Sheet1.csv")
journal_77 <- read_csv("Data Sets/journal_1877 - Sheet1.csv")
journal_80 <- read_csv("Data Sets/journal_1880 - Sheet1.csv")

```


```{r}
journal_71_72$journal <- 1
journal_73$journal <- 2
journal_74$journal <- 3
journal_75$journal <- 4
journal_76$journal <- 5
journal_77$journal <- 6

journal_80$journal <- 9
```

```{r}
journal_71_72 <- journal_71_72 %>%
  rename(transcription_accuracy = transcription)
```

```{r}
journal_71_72 <-  journal_71_72 %>% mutate(across(.fns = as.character)) %>% type_convert()
journal_73 <-  journal_71_72 %>% mutate(across(.fns = as.character)) %>% type_convert()
journal_74 <-  journal_71_72 %>% mutate(across(.fns = as.character)) %>% type_convert()
journal_75 <-  journal_71_72 %>% mutate(across(.fns = as.character)) %>% type_convert()
journal_76 <-  journal_71_72 %>% mutate(across(.fns = as.character)) %>% type_convert()
journal_77 <-  journal_71_72 %>% mutate(across(.fns = as.character)) %>% type_convert()
journal_80 <-  journal_71_72 %>% mutate(across(.fns = as.character)) %>% type_convert()
```


```{r}
journals <- dplyr::bind_rows(journal_71_72, journal_73, journal_74, journal_75, journal_76, journal_77, journal_80)
```

```{r}
#View(journal_71_72)
#View(journal_73)
#View(journal_74)
#View(journal_75)
#View(journal_76)
#View(journal_77)
#View(journal_80)

View(journals)
```

```{r}
journal_71_72 %>%
  select(location, local_place, date_mdy, journal)
```

```{r}
(places <- journals %>%
    unnest_tokens(word, location) %>%
    count(journal, word, sort = TRUE))
```
```{r}
(locals_places <- journals %>%
    count(local_place, sort = TRUE))
```

```{r}
locals_places %>%
    filter(n > 50) %>%
    filter(n < 500) %>% #500 to get rid of NA (may change)
  ggplot(aes(x=local_place, y=n)) + 
   geom_bar(stat = "identity")+
    theme(axis.text.x = element_text(angle = 60, hjust = 1))+
   labs(y = "n", x = "Location", title = "Local Locations in Freeland Bunker's Journals")
```
```{r}
l_place <- journals %>%
  select(journal, local_place, location) %>%
  separate(local_place, c("place_1", "place_2"), sep = ",")

```
```{r}
place_1 <- l_place %>%
    count(place_1, sort = TRUE) %>%
  rename(place = place_1)
place_2 <- l_place %>%
    count(place_2, sort = TRUE) %>%
  rename(place = place_2)

place_count <- dplyr::bind_rows(place_1, place_2)

```
```{r}
place_count %>%
    filter(n > 50) %>%
    filter(n < 700) %>% #700 to get rid of NA (may change)
  ggplot(aes(x=place, y=n)) + 
   geom_bar(stat = "identity")+
    theme(axis.text.x = element_text(angle = 60, hjust = 1))+
   labs(y = "n", x = "Location", title = "Local Locations in Freeland Bunker's Journals")
```

```{r}
loc_place <- journals %>%
  select(journal, local_place, location) %>%
  separate(local_place, c("place_1", "place_2", "place_3", "place_4"), sep = ",")
```
```{r}
loc_1 <- loc_place %>%
  select(place_1) %>%
  rename(place = place_1)
loc_2 <- loc_place %>%
  select(place_2) %>%
  rename(place = place_2)
loc_3 <- loc_place %>%
  select(place_3) %>%
  rename(place = place_3)
loc_4 <- loc_place %>%
  select(place_4) %>%
  rename(place = place_4)

loc_count <- dplyr::bind_rows(loc_1, loc_2, loc_3, loc_4)
```
```{r}
loc_count_1 <- loc_count %>%
    count(place, sort = TRUE)
```
```{r}
loc_count_1 %>%
    filter(n > 50) %>%
    filter(n < 700) %>% #700 to get rid of NA (may change)
  ggplot(aes(x=place, y=n)) + 
   geom_bar(stat = "identity")+
    theme(axis.text.x = element_text(angle = 60, hjust = 1))+
   labs(y = "n", x = "Location", title = "Local Locations in Freeland Bunker's Journals")
```




```{r}
(local_frequency <- journals %>%
    unnest_tokens(bigram, local_place, token = "ngrams", n = 2) %>% 
    drop_na(bigram) %>%
    select(bigram, location, date_mdy, journal))
```
```{r}
bigram_counts <- local_frequency %>%
    separate(bigram, c("word1", "word2"), sep = " ") %>%
    filter(!word1 %in% stop_words$word,
           !word2 %in% stop_words$word) %>%
    count(word1, word2, sort = TRUE)

print(bigram_counts)
```



```{r}
locals_places %>% mutate(as.numeric(n)) %>% type_convert()

locals_places %>%
  group_by(journal) %>%
    filter(n > 10) %>%
  #  filter(word != NA) %>%
  ggplot(aes(x=word, y=n)) + 
   geom_bar(stat = "identity")+
   facet_wrap(vars(journal))+
    theme(axis.text.x = element_text(angle = 60, hjust = 1))+
   labs(y = "n", x = "Location", title = "Local Locations in Freeland Bunker's Journals")
```


```{r}
journal_tf_idf <- places %>%
    bind_tf_idf(word, journal, n) 
```
```{r}
journal_tf_idf %>%
    group_by(journal) %>%
    slice_max(tf_idf, n = 10) %>%
    ggplot(aes(tf_idf, fct_reorder(word, tf_idf), fill = journal)) +
    geom_col(show.legend = FALSE) +
    facet_wrap(vars(journal), scales = "free") +
    scale_x_continuous(expand = c(0,0)) +
    labs(y = NULL, x = "tf-idf", title = "Highest tf-idf Locations in Freeland Bunker's Journals")
```



